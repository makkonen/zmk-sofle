#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        osm: one_shot_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "One-Shot Mod";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <2000>;
            quick-release;
        };

        arcl_tap: arcane_left_tap {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            label = "Arcane Left Tap";
            bindings = <&mo 1>;

            repeat {
                trigger-keys = <L D Z N R T S M C V>;
                bindings = <&key_repeat>;
                strict-modifiers;
            };

            arcl_b {
                trigger-keys = <B>;
                bindings = <&efore>;
            };

            arcl_f {
                trigger-keys = <F>;
                bindings = <&kp Y>;
            };

            arcl_w {
                trigger-keys = <W>;
                bindings = <&hat>;
            };

            arcl_p {
                trigger-keys = <P>;
                bindings = <&kp H>;
            };

            arcl_a {
                trigger-keys = <A>;
                bindings = <&nd>;
            };
        };

        arcr_tap: arcane_right_tap {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            label = "Arcane Right Tap";
            bindings = <&mo 2>;

            repeat {
                trigger-keys = <F O E K P>;
                bindings = <&key_repeat>;
                strict-modifiers;
            };

            arcr_a {
                trigger-keys = <A>;
                bindings = <&nd>;
            };

            arcr_b {
                trigger-keys = <B>;
                bindings = <&ecause>;
            };

            arcr_m {
                trigger-keys = <M>;
                bindings = <&ent>;
            };

            arcr_cw {
                trigger-keys = <C W>;
                bindings = <&ould>;
            };

            arcr_comma {
                trigger-keys = <COMMA>;
                bindings = <&spc_but>;
            };

            arcr_dot {
                trigger-keys = <DOT>;
                bindings = <&org>;
            };

            arcr_nt {
                trigger-keys = <N T>;
                bindings = <&ion>;
            };

            arcr_i {
                trigger-keys = <I>;
                bindings = <&ng>;
            };

            arcr_y {
                trigger-keys = <Y>;
                bindings = <&ou>;
            };
        };

        arcl: arcane_left {
            compatible = "zmk,behavior-hold-tap";
            label = "Arcane Left";
            bindings = <&mo>, <&arcl_tap>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
        };

        arcr: arcane_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Arcane Right";
            bindings = <&mo>, <&arcr_tap>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
        };
    };

    macros {
        efore: efore {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp F &kp O &kp R &kp E>;
        };

        qu: qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
        };

        nd: nd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp D>;
        };

        hat: hat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp A &kp T>;
        };

        mc_on: mc_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp N>;
        };

        spc_and: spc_and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp A &kp N &kp D>;
        };

        com: com {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp M>;
        };

        ould: ould {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp U &kp L &kp D>;
        };

        ion: ion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp O &kp N>;
        };

        ent: ent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N &kp T>;
        };

        ng: ng {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp G>;
        };

        ou: ou {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp U>;
        };

        ecause: ecause {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp C &kp A &kp U &kp S &kp E>;
        };

        hich: hich {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp I &kp C &kp H>;
        };

        spc_but: spc_but {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp B &kp U &kp T>;
        };

        org: org {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp R &kp G>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC                     &kp N1        &kp N2        &kp N3           &kp N4             &kp N5       &mmv MOVE_UP     &kp N6            &kp N7             &kp N8        &kp N9         &kp N0      &kp BACKSPACE
&kp TAB                     &kp B         &kp L         &kp D            &kp W              &kp Z        &mmv MOVE_DOWN   &kp J             &kp F              &kp O         &kp U          &kp APOS    &kp MINUS
&mt LCTRL ESCAPE            &kp N         &kp R         &kp T            &kp S              &kp G        &mmv MOVE_LEFT   &kp Y             &kp H              &kp A         &kp E          &kp I       &kp ENTER
&mt LSHFT LEFT_PARENTHESIS  &kp Q         &kp X         &kp M            &kp C              &kp V        &mmv MOVE_RIGHT  &kp K             &kp P              &kp COMMA     &kp DOT        &kp FSLH    &mt RSHFT RIGHT_PARENTHESIS
&mkp RCLK                   &kp LEFT_ALT  &kp LEFT_GUI  &lt 5 BACKSPACE  &arcl 1 undefined  &kp SPACE    &mkp LCLK        &osm RIGHT_SHIFT  &arcr 2 undefined  &lt 4 RETURN  &kp BACKSPACE  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "BASE";
        };

        nav {
            // Navigation layer (right hand) - activated by left thumb

            bindings = <
&none  &none          &none      &none       &none       &none        &mmv MOVE_UP     &none         &none        &none     &none      &none      &none
&none  &none          &none      &none       &none       &none        &mmv MOVE_DOWN   &kp CAPSLOCK  &kp HOME     &kp UP    &kp END    &kp PG_UP  &none
&none  &osm LEFT_GUI  &osm LALT  &osm LCTRL  &osm LSHFT  &kp LGUI     &mmv MOVE_LEFT   &caps_word    &kp LEFT     &kp DOWN  &kp RIGHT  &kp PG_DN  &none
&none  &kp LC(Z)      &kp LC(X)  &kp LC(C)   &kp LC(V)   &kp LC(Y)    &mmv MOVE_RIGHT  &kp INS       &kp LS(TAB)  &none     &kp TAB    &none      &none
&none  &none          &none      &none       &none       &kp SPACE    &mkp LCLK        &kp BSPC      &kp DEL      &none     &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "NAV";
        };

        num {
            // Number layer (left hand) - activated by right thumb

            bindings = <
&none  &none            &none   &none   &none    &none        &none  &none      &none       &none       &none      &none      &none
&none  &kp LBKT         &kp N7  &kp N8  &kp N9   &kp RBKT     &none  &none      &none       &none       &none      &none      &none
&none  &kp SEMI         &kp N4  &kp N5  &kp N6   &kp EQUAL    &none  &none      &osm RSHFT  &osm RCTRL  &osm RALT  &osm RGUI  &none
&none  &kp GRAVE        &kp N1  &kp N2  &kp N3   &kp BSLH     &none  &kp RC(Y)  &kp RC(V)   &kp RC(C)   &kp RC(X)  &kp RC(Z)  &none
&none  &kp KP_NUMBER_0  &none   &none   &kp DOT  &kp N0       &none  &none      &none       &none       &none      &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
            display-name = "NUM";
        };

        sym {
            // Symbol layer (left hand) - activated by right thumb + mod

            bindings = <
&none  &none      &none     &none      &none      &none       &none  &none  &none       &none       &none      &none      &none
&none  &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC    &none  &none  &none       &none       &none      &none      &none
&none  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS    &none  &none  &osm RSHFT  &osm RCTRL  &osm RALT  &osm RGUI  &none
&none  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE    &none  &none  &none       &none       &none      &none      &none
&none  &none      &none     &none      &kp LPAR   &kp RPAR    &none  &none  &none       &none       &none      &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
            display-name = "SYM";
        };

        func {
            // Function layer (left hand) - activated by right thumb + additional mod

            bindings = <
&none  &none    &none   &none   &none   &none              &none  &none                      &none             &none         &none              &none                    &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN          &none  &none                      &none             &none         &none              &none                    &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK           &none  &none                      &kp LG(LC(LEFT))  &none         &kp LC(LG(RIGHT))  &none                    &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &none  &kp RS(RA(RC(PAGE_DOWN)))  &kp K_MUTE        &kp C_VOL_DN  &kp C_VOL_UP       &kp RS(RA(RC(PAGE_UP)))  &none
&none  &none    &none   &none   &none   &none              &none  &none                      &none             &none         &none              &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
            display-name = "FUNC";
        };

        media {
            // Media layer (right hand) - activated by left thumb + additional mod

            bindings = <
&rgb_ug RGB_ON   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none       &none         &none       &none  &none
&rgb_ug RGB_OFF  &bt BT_CLR       &out OUT_USB     &out OUT_BLE  &bootloader   &sys_reset      &none  &none  &none       &kp C_VOL_UP  &none       &none  &none
&rgb_ug RGB_EFR  &osm LGUI        &osm LALT        &osm LCTRL    &osm LSHFT    &none           &none  &none  &kp C_PREV  &kp C_VOL_DN  &kp C_NEXT  &none  &none
&rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &none         &none         &none           &none  &none  &none       &kp C_PP      &kp C_MUTE  &none  &none
&kp C_MUTE       &none            &none            &none         &none         &none           &none  &none  &kp C_STOP  &none         &none       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "MEDIA";
        };
    };
};

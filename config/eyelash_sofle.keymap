#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    osm: osm {
        compatible = "zmk,behavior-sticky-key";
        label = "One-Shot Mod";
        bindings = <&kp>;
        #binding-cells = <1>;
        release-after-ms = <2000>;
        quick-release;
        ignore-modifiers;
    };

    behaviors {
        arcane_l: arcane_l {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&mo 1>;
            
            repeat {
                trigger-keys = <B L D Z N R T S M C V>;
                bindings = <&key_repeat>;
                max-prior-idle-ms = <500>;
                strict-modifiers;
            };
            arcl_b { trigger-keys = <B>; max-prior-idle-ms = <300>; bindings = &before; };
        };
        repeat_F14: repeat_F14 {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&kp F14>;
            
            repeat {
                trigger-keys = <F O E K P>;
                bindings = <&key_repeat>;
                max-prior-idle-ms = <500>;
                strict-modifiers;
            };
        };
    };

    macros {
        before: before {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp E &kp F &kp O &kp R &kp E>
                ;
        }
    }

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC                     &kp N1  &kp N2        &kp N3        &kp N4     &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8         &kp N9      &kp N0    &kp BACKSPACE
&kp TAB                     &kp B   &kp L         &kp D         &kp W      &kp Z        &kp DOWN_ARROW   &kp J      &kp F      &kp O          &kp U       &kp APOS  &kp MINUS
&mt LCTRL ESCAPE            &kp N   &kp R         &kp T         &kp S      &kp G        &kp LEFT_ARROW   &kp Y      &kp H      &kp A          &kp E       &kp I     &kp ENTER
&mt LSHFT LEFT_PARENTHESIS  &kp Q   &kp X         &kp M         &kp C      &kp V        &kp RIGHT_ARROW  &kp K      &kp P      &kp COMMA      &kp DOT     &kp FSLH  &mt RSHFT RIGHT_PARENTHESIS
&kp ENTER                   &mo 5   &kp LEFT_GUI  &kp LEFT_ALT  &arcane_l  &kp SPACE    &kp ENTER        &kp ENTER  &lt 2 F14  &kp BACKSPACE  &kp DELETE  &mo 4
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "BASE";
        };

        nav {
            // Navigation layer (right hand) - activated by left thumb

            bindings = <
&none  &none          &none      &none       &none       &none        &mmv MOVE_UP     &none         &none        &none     &none      &none      &none
&none  &none          &none      &none       &none       &none        &mmv MOVE_DOWN   &kp CAPSLOCK  &kp HOME     &kp UP    &kp END    &kp PG_UP  &none
&none  &osm LEFT_GUI  &osm LALT  &osm LCTRL  &osm LSHFT  &kp LGUI     &mmv MOVE_LEFT   &caps_word    &kp LEFT     &kp DOWN  &kp RIGHT  &kp PG_DN  &none
&none  &kp LC(Z)      &kp LC(X)  &kp LC(C)   &kp LC(V)   &kp LC(Y)    &mmv MOVE_RIGHT  &kp INS       &kp LS(TAB)  &none     &kp TAB    &none      &none
&none  &none          &none      &none       &none       &kp SPACE    &mkp LCLK        &kp BSPC      &kp DEL      &none     &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "NAV";
        };

        num {
            // Number layer (left hand) - activated by right thumb

            bindings = <
&none  &none            &none   &none   &none    &none        &none  &none      &none       &none       &none      &none      &none
&none  &kp LBKT         &kp N7  &kp N8  &kp N9   &kp RBKT     &none  &none      &none       &none       &none      &none      &none
&none  &kp SEMI         &kp N4  &kp N5  &kp N6   &kp EQUAL    &none  &none      &osm RSHFT  &osm RCTRL  &osm RALT  &osm RGUI  &none
&none  &kp GRAVE        &kp N1  &kp N2  &kp N3   &kp BSLH     &none  &kp RC(Y)  &kp RC(V)   &kp RC(C)   &kp RC(X)  &kp RC(Z)  &none
&none  &kp KP_NUMBER_0  &none   &none   &kp DOT  &kp N0       &none  &none      &none       &none       &none      &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
            display-name = "NUM";
        };

        sym {
            // Symbol layer (left hand) - activated by right thumb + mod

            bindings = <
&none  &none      &none     &none      &none      &none       &none  &none  &none       &none       &none      &none      &none
&none  &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC    &none  &none  &none       &none       &none      &none      &none
&none  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS    &none  &none  &osm RSHFT  &osm RCTRL  &osm RALT  &osm RGUI  &none
&none  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE    &none  &none  &none       &none       &none      &none      &none
&none  &none      &none     &none      &kp LPAR   &kp RPAR    &none  &none  &none       &none       &none      &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
            display-name = "SYM";
        };

        func {
            // Function layer (left hand) - activated by right thumb + additional mod

            bindings = <
&none  &none    &none   &none   &none   &none              &none  &none                      &none       &none         &none         &none                    &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN          &none  &none                      &none       &none         &none         &none                    &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK           &none  &none                      &osm RSHFT  &osm RCTRL    &osm RALT     &osm RGUI                &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &none  &kp RS(RA(RC(PAGE_DOWN)))  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp RS(RA(RC(PAGE_UP)))  &none
&none  &none    &none   &none   &none   &none              &none  &none                      &none       &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
            display-name = "FUNC";
        };

        media {
            // Media layer (right hand) - activated by left thumb + additional mod

            bindings = <
&rgb_ug RGB_ON   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none       &none         &none       &none  &none
&rgb_ug RGB_OFF  &bt BT_CLR       &out OUT_USB     &out OUT_BLE  &bootloader   &sys_reset      &none  &none  &none       &kp C_VOL_UP  &none       &none  &none
&rgb_ug RGB_EFR  &osm LGUI        &osm LALT        &osm LCTRL    &osm LSHFT    &none           &none  &none  &kp C_PREV  &kp C_VOL_DN  &kp C_NEXT  &none  &none
&rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &none         &none         &none           &none  &none  &none       &kp C_PP      &kp C_MUTE  &none  &none
&kp C_MUTE       &none            &none            &none         &none         &none           &none  &none  &kp C_STOP  &none         &none       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "MEDIA";
        };
    };
};
